<%-include("../layout/userheader.ejs")-%>
<%-include("../layout/usercentre.ejs")-%>
<style>
    /* Reset default styles */
* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

/* Global styles */
body {
    font-family: Arial, sans-serif;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    background-color: #f0f0f0;
}

.otp-form {
    background-color: #ffffff;
    border-radius: 8px;
    padding: 20px;
    box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);
    text-align: center;
    max-width: 400px;
    width: 100%;
}

h2 {
    margin-bottom: 20px;
    color: #333;
}

/* OTP input styles */
.otp-container, .email-otp-container {
    display: flex;
    justify-content: center;
    margin-top: 20px;
}

.otp-input, .email-otp-input {
    width: 40px;
    height: 40px;
    text-align: center;
    font-size: 18px;
    margin: 0 5px;
    border: 1px solid #ccc;
    border-radius: 4px;
    outline: none;
    transition: border-color 0.3s;
}

.otp-input:focus, .email-otp-input:focus {
    border-color: #007bff;
}

#verificationCode,
#emailverificationCode {
    width: 100%;
    margin-top: 15px;
    padding: 10px;
    font-size: 14px;
    border: 1px solid #ccc;
    border-radius: 4px;
    outline: none;
    transition: border-color 0.3s;
}

#verificationCode:focus,
#emailverificationCode:focus {
    border-color: #007bff;
}
.email-otp {
    margin-top: 25px;
}
/* Button styles */
button {
    margin-top: 15px;
    background-color: #007bff;
    color: #fff;
    border: none;
    border-radius: 4px;
    padding: 10px 20px;
    font-size: 16px;
    cursor: pointer;
    transition: background-color 0.3s;
}

button:hover {
    background-color: #0056b3;
}
</style>
<div class="otp-form">
  
  <!-- Email OTP Form -->
  <form class="email-otp" action="get-otp" method="post">
      <h2>Email OTP Verification</h2>
      <div class="email-otp-container">
          <!-- Four input fields for OTP digits -->
          <input name="num1" type="number" class="email-otp-input" pattern="\d" maxlength="1">
          <input name="num2" type="number" class="email-otp-input" pattern="\d" maxlength="1" disabled>
          <input name="num3" type="number" class="email-otp-input" pattern="\d" maxlength="1" disabled>
          <input name="num4" type="number" class="email-otp-input" pattern="\d" maxlength="1" disabled>
      </div>
      <input type="hidden" name="statuz" value="1">
      <div class="d-flex justify-content-center mt-3 "> <p class="text-danger">OTP will be expired in : <p id="timer">01:00</p></p></div>
      <span class="d-flex justify-content-center " style="color: red;"><%=err%></span>
      <div id="resendOtp" class="mt-2" >
        <a style="text-decoration: none;" href="/resendOtp">Resend OTP</a>
      </div>
      
      
      <!-- Button to verify OTP -->
      <button type="submit" id="verifyEmailOTP">VERIFY OTP</button>
  </form>
</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    let duration = 60; // Duration in seconds
    const timerDisplay = $("#timer");
    const resendOtp = $("#resendOtp");

    function updateTimer() {
      const minutes = Math.floor(duration / 60);
      let seconds = duration % 60;
      seconds = seconds < 10 ? "0" + seconds : seconds;

      timerDisplay.text(`${minutes}:${seconds}`);

      if (duration === 0) {
        clearInterval(countdown);
        timerDisplay.text("00:00");
        
      } else {
        duration--;
      }
    }

    // Initial call to display the full minute
    updateTimer();

    // Set up the countdown
    const countdown = setInterval(updateTimer, 1000);
    const inputs = document.querySelectorAll("input"),
      button = document.querySelector("button");

    inputs.forEach((input, index1) => {
      input.addEventListener("keyup", (e) => {
        const currentInput = input,
          nextInput = input.nextElementSibling,
          prevInput = input.previousElementSibling;

        if (currentInput.value.length > 1) {
          currentInput.value = "";
          return;
        }
        if (nextInput && nextInput.hasAttribute("disabled") && currentInput.value !== "") {
          nextInput.removeAttribute("disabled");
          nextInput.focus();
        }

        if (e.key === "Backspace") {
          inputs.forEach((input, index2) => {
            if (index1 <= index2 && prevInput) {
              input.setAttribute("disabled", true);
              input.value = "";
              prevInput.focus();
            }
          });
        }
        if (!inputs[3].disabled && inputs[3].value !== "") {
          button.classList.add("1");
          return;
        }
        button.classList.remove("1");
      });
    });

    window.addEventListener("load", () => inputs[0].focus());
</script>
<%-include("../layout/userfooter.ejs")-%>