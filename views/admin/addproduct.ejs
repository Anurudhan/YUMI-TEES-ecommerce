<%-include("../layout/adminheader.ejs")-%>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">
<%-include("../layout/admincentre.ejs")-%>

<%-include("../partials/adminnavbar.ejs")-%>
<form action="/admin/addProducts"  id="" method="post" enctype="multipart/form-data">
    <div class="container" style="margin-top: 90px;">
        <div class="row justify-content-center">
            <div class="col-lg-12">
                <h1 class="text-center mb-4">Add Product</h1>
                <div class="row">
                    <div class="col-lg-6">
                        <div class="form-group">
                            <input type="text" name="productName" id="name" class="form-control mb-3" placeholder="Product Name" required>
                        </div>
                        <div class="form-group">
                            <select class="form-select mb-3" name="Category" required>
                                <option value="" selected disabled>Select a category</option>
                                <% category.forEach((x) => { %>
                                    <option value="<%= x._id %>"><%= x.categoryname %></option>
                                <% }) %>
                            </select>
                        </div>
                        
                        <% for(let i = 1; i <= 4; i++) { %>
                            <div class="form-group">
                                <textarea name="Specification<%= i %>" id="spec<%= i %>" class="form-control mb-3" placeholder="Specification<%= i %>" required></textarea>
                            </div>
                        <% } %>
                        <div class="form-group">
                            <textarea name="Description" id="desc" class="form-control mb-3" placeholder="Description" required></textarea>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            <input type="number" name="price" id="price" class="form-control mb-3" placeholder="Enter the price" required>
                        </div>
                        <div class="form-group">
                            <input type="number" name="discountAmount" id="discountAmount" class="form-control mb-3" placeholder="Discount Amount" required>
                        </div>
                        <div class="form-group">
                            <input type="number" name="stockQuantity" id="stockquantity" class="form-control mb-3" placeholder="Stock" required>
                        </div>
                        <div class="row">
                            <% for(let i = 1; i <= 4; i++) { %>
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <input type="file" name="image<%= i %>" id="imageInput<%= i %>" accept="image/*" onchange="change(event, '<%= i %>')"
                                        style="width: 100%;height: 35px;border-radius: 5px;padding-left: 5px;margin-bottom: 10px;" required>
                                        
                                    </div>
                                </div>
                                <% if (i === 2) { %>
                                    </div>
                                    <div class="row">
                                <% } %>
                            <% } %>
                        </div>
                        <div class="row justify-content-center">
                            <% for(let i = 1; i <= 4; i++) { %>
                                <div class="col-lg-3">
                                    <div style="width: 100px;height: 100px;margin: 10px; border: 1px solid grey;">
                                        <img id="imagePreview<%= i %>" src="../assets/pngtree-empty-box-icon-for-your-project-png-image_1533458.jpg" alt="Image Preview <%= i %>" style="width: 100%; height: 100%;">
                                    </div>
                                </div>
                            <% } %>
                        </div>
                        
                        
                        <div class="form-group">
                            <input name="tags" class="form-control mb-3" placeholder="Tags" required>
                        </div>
                       
                    </div>
                </div>
                <div class="form-group text-center">
                    <button type="submit" class="btn btn-primary">Add Product</button>
                </div>
            </div>
        </div>
    </div>
</form>
<% for(let i = 1; i <= 4; i++) { %>
    <div class="modal fade" id="modal<%= i %>" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">
        <div class="modal-dialog modal-xl" style="max-width: 800px;" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalLabel">Crop Image</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="img-container" style="width: 100%;height: auto;">
                        <div class="row">
                            <div class="col-md-8">
                                <img id="cropperImage<%= i %>" class="img-fluid" style="width: 100%; height: 100%;">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" id="crop<%= i %>">Crop</button>
                </div>
            </div>
        </div>
    </div>
    <% } %>




    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    
<script>

function change(event, no) {
    console.log("File changed, updating preview image...");
    const fileInput = event.target;
    const allowedExtensions = /\.(jpg|jpeg|png|gif)$/i;

    if (!allowedExtensions.test(fileInput.value)) {
        Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: 'Please upload only image files (jpg, jpeg, png, gif).'
        }).then((result) => {
            if (result.isConfirmed) {
                fileInput.value = '';
            }
        });
        return false;
    }
    
    const reader = new FileReader();
    reader.onload = function (e) {
        const image = document.getElementById(`cropperImage${no}`);
        image.src = e.target.result;
        if (image.cropper) {
            image.cropper.destroy();
        }

        const cropper = new Cropper(image, {
            aspectRatio: NaN,
            viewMode: 3,
            ready() {
                $(`#modal${no}`).modal('show');
            },
        });

        document.getElementById(`crop${no}`).addEventListener('click', function () {
            const canvas = cropper.getCroppedCanvas();
            const croppedImage = canvas.toDataURL(); // You can upload this data to the server
            console.log("Cropped Image Data: ", croppedImage);
            
            // Extract the file name from the cropped image data URL
            const fileName = `cropped_${no}.png`; // Customize the filename as needed
            
            // Set the value of the corresponding file input to the filename
            const fileInput = document.getElementById(`imageInput${no}`);

            const originalFileName = fileInput.files[0].name;

            // Create a new File object from the cropped image data
            const croppedBlob = dataURItoBlob(croppedImage);
            const croppedFile = new File([croppedBlob], `${originalFileName}_cropped${no}`, { type: 'image/png' });

            // Create a FileList-like object with the new File object
            const newFileList = new DataTransfer();
            newFileList.items.add(croppedFile);

            // Assign the FileList-like object to the file input
            fileInput.files = newFileList.files;
            
            // Update the preview image
            const previewImage = document.getElementById(`imagePreview${no}`);
            previewImage.src = croppedImage;
            
            // Hide the modal
            $(`#modal${no}`).modal('hide');
        });
    };
    reader.readAsDataURL(fileInput.files[0]);
    return true;
}

function dataURItoBlob(dataURI) {
    // Convert base64 to raw binary data held in a string
    const byteString = atob(dataURI.split(',')[1]);

    // Separate the mime component
    const mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];

    // Write the bytes of the string to an ArrayBuffer
    const arrayBuffer = new ArrayBuffer(byteString.length);
    const intArray = new Uint8Array(arrayBuffer);
    for (let i = 0; i < byteString.length; i++) {
        intArray[i] = byteString.charCodeAt(i);
    }

    // Write the ArrayBuffer to a blob
    return new Blob([arrayBuffer], { type: mimeString });
}



    const priceInput = document.getElementById('price');
    const discountInput = document.getElementById('discountAmount');
    const stockInput = document.getElementById("stockquantity")
    const nameInput = document.getElementById("name")
    const spec1Input = document.getElementById('spec1')
    const spec2Input = document.getElementById('spec2')
    const spec3Input = document.getElementById('spec3')
    const spec4Input = document.getElementById('spec4')
    const descInput = document.getElementById('desc')

    priceInput.addEventListener('input', validatePrice);
    discountInput.addEventListener('input', validatePrice);
    stockInput.addEventListener('input', validatestock);
    nameInput.addEventListener('input',validateTrim)
    spec1Input.addEventListener('input',validateTrim)
    spec2Input.addEventListener('input',validateTrim)
    spec3Input.addEventListener('input',validateTrim)
    spec4Input.addEventListener('input',validateTrim)
    descInput.addEventListener('input',validateTrim)


    function validatePrice() {
        const price = parseFloat(priceInput.value);
        const discount = parseFloat(discountInput.value);
        priceInput.setCustomValidity('');
        discountInput.setCustomValidity('');
        if (price <= discount) {
            priceInput.setCustomValidity('Price must be greater than discount amount.');
        }else if(price<0){
            priceInput.setCustomValidity('Price must be more than zero') 
        }else if(discount<0){
            discountInput.setCustomValidity('discount must be more than or equal to zero')
        }
        else {
            priceInput.setCustomValidity('');
            discountInput.setCustomValidity('');
        }
    }
    function validatestock() {
        const stock = parseFloat(stockInput.value)
        if(stock < 0) stockInput.setCustomValidity('Stock must be more than or equal to zero');
        else stockInput.setCustomValidity('');
    }
    function validateTrim(){
        const name = nameInput.value
        nameInput.setCustomValidity("")
        spec1Input.setCustomValidity("")
        spec2Input.setCustomValidity("")
        spec3Input.setCustomValidity("")
        spec4Input.setCustomValidity("")
        descInput.setCustomValidity("")
        if(name.trim()===""){
            nameInput.setCustomValidity("Fields cannot contain only spaces. Please enter valid values.")
        }
        else if(!/^[a-zA-Z\s]+$/.test(name)){
            nameInput.setCustomValidity("Fields cannot contain numbers.")
        }
        else if(spec1Input.value.trim()===""||!/^[a-zA-Z\s]+$/.test(spec1Input.value.charAt(0))){
            spec1Input.setCustomValidity("Fields cannot contain only spaces and Do not start with numbers and symbols.")
        }
        else if(spec2Input.value.trim()===""||!/^[a-zA-Z\s]+$/.test(spec2Input.value.charAt(0))){
            spec2Input.setCustomValidity("Fields cannot contain only spaces and Do not start with numbers and symbols.")
        }
        else if(spec3Input.value.trim()===""||!/^[a-zA-Z\s]+$/.test(spec3Input.value.charAt(0))){
            spec3Input.setCustomValidity("Fields cannot contain only spaces and Do not start with numbers and symbols.")
        }
        else if(spec4Input.value.trim()===""||!/^[a-zA-Z\s]+$/.test(spec4Input.value.charAt(0))){
            spec4Input.setCustomValidity("Fields cannot contain only spaces and Do not start with numbers and symbols.")
        }
        else if (descInput.value.trim()===""){
            descInput.setCustomValidity("Fields cannot contain only spaces and Do not start with numbers and symbols.")
        }
        else{
            nameInput.setCustomValidity("")
            spec1Input.setCustomValidity("")
            spec2Input.setCustomValidity("")
            spec3Input.setCustomValidity("")
            spec4Input.setCustomValidity("")
            descInput.setCustomValidity("")
        }
    }

   

</script>

<%-include("../layout/adminfooter.ejs")-%>
